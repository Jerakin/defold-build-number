local version = require "defold-build-number._version"
local build_number = require "defold-build-number.build_number"

local opts = build_number._default_options


return function()
	describe("Options provided results in correct pattern", function()
		test("On release tag (default pattern)", function()
			local v = version.version("1.0.0", "0", "g4ac2448", false)
			assert(v:_get_format(opts) == "{base_version}")
		end)
		test("distance", function()
			local v = version.version("1.0.0", "1", "g4ac2448", false)
			assert(v:_get_format(opts) == opts.distance)
			--assert(version.version("1.0.0", "1", "g4ac2448", false):format(opts) == "1.0.1.dev1+gg4ac2448")
		end)
		test("dirty", function()
			local v = version.version("1.0.0", "0", "g4ac2448", true)
			assert(v:_get_format(opts) == opts.dirty)
		end)
		test("dirty distance", function()
			local v = version.version("1.0.0", "1", "gfb6eb15", true)
			assert(v:_get_format(opts) == opts.distance_dirty)
		end)
	end)
	describe("Default options gives the expected version string.", function()
		test("On release tag", function()
			assert(version.version("1.0.0", "0", "g4ac2448", false):format(opts) == "1.0.0")
		end)
		test("On prerelease tag", function()
			assert(version.version("1.0.0-alpha.1", "0", "g4ac2448", false):format(opts) == "1.0.0-alpha.1")
		end)
		test("distance", function()
			assert(version.version("1.0.0", "1", "g4ac2448", false):format(opts) == "1.0.1.dev1+gg4ac2448")
		end)
		test("dirty", function()
			assert(version.version("1.0.0", "0", "g4ac2448", true):format(opts) == "1.0.0+d" ..  os.date("%Y%m%d"))
		end)
		test("dirty distance", function()
			assert(version.version("1.0.0", "1", "gfb6eb15", true):format(opts) == "1.0.1.dev1+ggfb6eb15.d" .. os.date("%Y%m%d"))
		end)
		test("prefixed release tag is stripped", function()
			assert(version.version("v1.0.0", "0", "gfb6eb15", false):format(opts) == "1.0.0")
		end)
	end)
end
